<?xml version="1.1" encoding="UTF-8" standalone="no"?><project>
  <actions/>
  <description>First pass build.  This build will not include the updated pxe-installer.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>60</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.34">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>MY_REPO_ROOT</name>
          <description>/localdisk/designer/$USER/$PROJECT</description>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MY_WORKSPACE</name>
          <description>/localdisk/loadbuild/$USER/$PROJECT/$TIMESTAMP</description>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MY_REPO</name>
          <description>$MY_REPO_ROOT/cgcs-root</description>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PUBLISH_LOGS_BASE</name>
          <defaultValue>/tmp/logs</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PUBLISH_LOGS_URL</name>
          <defaultValue>https://127.0.0.1/</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OS</name>
          <defaultValue>debian</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MASTER_JOB_NAME</name>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>LAYER</name>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>FULL_BUILD</name>
          <description>do not use build avoidance</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DOCKER_BUILD_TAG</name>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>REGISTRY</name>
          <defaultValue>docker.io</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>REGISTRY_ORG</name>
          <defaultValue>starlingx</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>REGISTRY_USERID</name>
          <defaultValue>slittlewrs</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.parameterizedtrigger.TriggerBuilder plugin="parameterized-trigger@2.45">
      <configs>
        <hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
          </configs>
          <projects>docker_login</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
          <block>
            <buildStepFailureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </buildStepFailureThreshold>
            <unstableThreshold>
              <name>UNSTABLE</name>
              <ordinal>1</ordinal>
              <color>YELLOW</color>
              <completeBuild>true</completeBuild>
            </unstableThreshold>
            <failureThreshold>
              <name>FAILURE</name>
              <ordinal>2</ordinal>
              <color>RED</color>
              <completeBuild>true</completeBuild>
            </failureThreshold>
          </block>
          <buildAllNodesWithLabel>false</buildAllNodesWithLabel>
        </hudson.plugins.parameterizedtrigger.BlockableBuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.TriggerBuilder>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -ex

DOCKER_BUILD_RETRIES=3
#LAT_BINARY_RESOURCE_PATH="http://mirror.starlingx.cengn.ca/mirror/lat-sdk/lat-sdk-20210820"

echo "DOCKER_BUILD_TAG=$DOCKER_BUILD_TAG"
echo "MY_REPO_ROOT=$MY_REPO_ROOT"
echo "MY_WORKSPACE=$MY_WORKSPACE"
echo "PUBLISH_LOGS_BASE=$PUBLISH_LOGS_BASE"
echo "PUBLISH_LOGS_URL=$PUBLISH_LOGS_URL"
echo "DOCKER_BUILD_RETRIES=$DOCKER_BUILD_RETRIES"
echo "LAYER=$LAYER"
echo "REGISTRY=$REGISTRY"
echo "REGISTRY_ORG=$REGISTRY_ORG"
echo "REGISTRY_USERID=$REGISTRY_USERID"

[ -n "$DOCKER_BUILD_TAG" ]
[ -n "$MY_REPO_ROOT" ]
[ -n "$MY_WORKSPACE" ]
[ -n "$PUBLISH_LOGS_BASE" ]
[ -n "$PUBLISH_LOGS_URL" ]
[ -n "$DOCKER_BUILD_RETRIES" ]
[ -n "$LAYER" ]
[ -n "$REGISTRY_ORG" ]

if [ ! -f "${MY_WORKSPACE}/NEED_BUILD" ]; then
    echo "No new content.  Build not required"
    exit 0
fi


# export DOCKER_BUILD_IMAGE=$USER:$DOCKER_BUILD_TAG

export DOCKER_BUILD_WORKDIR=$MY_REPO_ROOT/stx-tools

MYUID=$(id -u)
MYUNAME=$(id -un)

#
# Function to call a command, with support for retries
#
function with_retries {
    local max_attempts=$1
    local cmd=$2

    # Pop the first two arguments off the list,
    # so we can pass additional args to the command safely
    shift 2

    local -i attempt=0

    while :; do
        # let -i attempt++
        attempt=$((attempt+1))

        echo "Running: ${cmd} $@"
        local rc=0
        ${cmd} "$@" || rc=1
        if [ $rc -eq 0 ]; then
            return 0
        fi

        echo "Command (${cmd}) failed, attempt ${attempt} of ${max_attempts}."
        if [ ${attempt} -lt ${max_attempts} ]; then
            local delay=5
            echo "Waiting ${delay} seconds before retrying..."
            sleep ${delay}
            continue
        else
            echo "Max command attempts reached. Aborting..."
            return 1
        fi
    done
}

if [[ -z "$REGISTRY" || "$REGISTRY" == "docker.io" ]] ; then
    DOCKER_BUILD_IMAGE_PREFIX=
else
   DOCKER_BUILD_IMAGE_PREFIX="$REGISTRY/"
fi
DOCKER_BUILD_IMAGE_PREFIX+="$REGISTRY_ORG/"
VERSIONED_LST_FILE="$MY_WORKSPACE/outputs/docker-images/builder-images-debian-versioned.lst"
LATEST_LST_FILE="$MY_WORKSPACE/outputs/docker-images/builder-images-debian-latest.lst"

mkdir -p "$MY_WORKSPACE/outputs/docker-images"

cd $DOCKER_BUILD_WORKDIR
DOCKERFILE_LIST="$(find stx/dockerfiles -name '*.Dockerfile')"
ALL_IMAGES=()

if $FULL_BUILD ; then
    DOCKER_BUILD_ARGS+=" --no-cache"
fi

# versioned images
rm -f "$VERSIONED_LST_FILE"
for DOCKERFILE in $DOCKERFILE_LIST ; do
    DOCKERFILE_NAME=${DOCKERFILE#stx/dockerfiles/}
    DOCKERFILE_NAME=${DOCKERFILE_NAME%.Dockerfile}
    DOCKER_BUILD_IMAGE=${DOCKER_BUILD_IMAGE_PREFIX}${DOCKERFILE_NAME}:${DOCKER_BUILD_TAG}

    echo "building ${DOCKER_BUILD_IMAGE}"
    echo $DOCKER_BUILD_IMAGE &gt;&gt;"$VERSIONED_LST_FILE"
    
#    if [[ $DOCKERFILE_NAME == stx-lat-tool ]] ; then
#      sed  "s!\${LAT_BINARY_RESOURCE_PATH}!${LAT_BINARY_RESOURCE_PATH}!" $DOCKERFILE &gt;$DOCKERFILE.new
#      DOCKERFILE=$DOCKERFILE.new
#    fi

    with_retries $DOCKER_BUILD_RETRIES  docker build \
                  --ulimit core=0 \
                  --network host \
                  --tag $DOCKER_BUILD_IMAGE \
                  --file ${DOCKERFILE} \
                  $DOCKER_BUILD_ARGS \
                  .
                  
    ALL_IMAGES+=($DOCKER_BUILD_IMAGE)
                  
done

# latest tags
rm -f  "$LATEST_LST_FILE"
for DOCKERFILE in $DOCKERFILE_LIST ; do
    DOCKERFILE_NAME=${DOCKERFILE#stx/dockerfiles/}
    DOCKERFILE_NAME=${DOCKERFILE_NAME%.Dockerfile}
    DOCKER_BUILD_IMAGE=${DOCKER_BUILD_IMAGE_PREFIX}${DOCKERFILE_NAME}:${DOCKER_BUILD_TAG}
    DOCKER_BUILD_IMAGE_LATEST=${DOCKER_BUILD_IMAGE%-*}-latest
    
    echo "creating tag ${DOCKER_BUILD_IMAGE_LATEST}"
    echo $DOCKER_BUILD_IMAGE_LATEST &gt;&gt;"$LATEST_LST_FILE"
    docker tag $DOCKER_BUILD_IMAGE $DOCKER_BUILD_IMAGE_LATEST
    ALL_IMAGES+=($DOCKER_BUILD_IMAGE_LATEST)
done

# push them
for img in ${ALL_IMAGES[@]} ; do
    docker push $img
done
</command>
      <configuredLocalRules/>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@448.v5b_97805e3767">
      <recipients>davlet.panech@windriver.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.95">
      <recipientList>$DEFAULT_RECIPIENTS</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern/>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern/>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <from/>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.45">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>BUILD_NM=$JOB_NAME
BUILD_NUM=$BUILD_NUMBER
PUBLISH_LOGS_BASE=$PUBLISH_LOGS_BASE
MY_REPO_ROOT=$MY_REPO_ROOT
MY_WORKSPACE=$MY_WORKSPACE
OS=$OS
MASTER_JOB_NAME=$MASTER_JOB_NAME</properties>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>docker_logout,copy_logs,copy_failed_package_logs</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs class="empty-list"/>
          <projects>STX_delete_deb_build_containers</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.22"/>
  </buildWrappers>
</project>