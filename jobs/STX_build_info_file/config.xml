<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Update build info</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>60</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH</name>
          <description></description>
          <defaultValue>master</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TIMESTAMP</name>
          <description></description>
          <defaultValue>19000101T010101Z</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OS</name>
          <description></description>
          <defaultValue>centos</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MASTER_BUILD_NUMBER</name>
          <description></description>
          <defaultValue>0</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MASTER_JOB_NAME</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MY_REPO</name>
          <description>/localdisk/designer/$USER/$PROJECT/cgcs-root</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MY_WORKSPACE</name>
          <description>/localdisk/loadbuild/$USER/$PROJECT/$TIMESTAMP</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PUBLISH_LOGS_BASE</name>
          <description></description>
          <defaultValue>/tmp/logs</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PUBLISH_LOGS_URL</name>
          <description></description>
          <defaultValue>https://127.0.0.1/</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>LAYER</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>echo &quot;BRANCH=$BRANCH&quot;
echo &quot;TIMESTAMP=$TIMESTAMP&quot;
echo &quot;MY_REPO=$MY_REPO&quot;
echo &quot;MY_WORKSPACE=$MY_WORKSPACE&quot;
echo &quot;OS=$OS&quot;
echo &quot;MASTER_BUILD_NUMBER=$MASTER_BUILD_NUMBER&quot;
echo &quot;MASTER_JOB_NAME=$MASTER_JOB_NAME&quot;
echo &quot;PUBLISH_LOGS_BASE=$PUBLISH_LOGS_BASE&quot;
echo &quot;PUBLISH_LOGS_URL=$PUBLISH_LOGS_URL&quot;
echo &quot;LAYER=$LAYER&quot;

[ -n &quot;$BRANCH&quot; ]
[ -n &quot;$TIMESTAMP&quot; ]
[ -n &quot;$MY_REPO&quot; ]
[ -n &quot;$MY_WORKSPACE&quot; ]
[ -n &quot;$OS&quot; ]
[ -n &quot;$MASTER_BUILD_NUMBER&quot; ]
[ -n &quot;$MASTER_JOB_NAME&quot; ]
[ -n &quot;$PUBLISH_LOGS_BASE&quot; ]
[ -n &quot;$PUBLISH_LOGS_URL&quot; ]

if [ ! -f &quot;${MY_WORKSPACE}/NEED_BUILD&quot; ]; then
    echo &quot;No new content.  Build not required&quot;
    exit 0
fi

# export MY_REPO=/localdisk/designer/$USER/$PROJECT/cgcs-root
# export MY_WORKSPACE=/localdisk/loadbuild/$USER/$PROJECT/$TIMESTAMP
export INFO_DIR=$MY_WORKSPACE
export INFO_FILE=$INFO_DIR/BUILD
export VER=99.99
export RELEASE_INFO_PATH=$MY_REPO/stx/utilities/utilities/build-info/release-info.inc
export OLD_RELEASE_INFO_PATH=$MY_REPO/stx/stx-integ/utilities/build-info/release-info.inc

HOSTNAME=$(hostname)

if [ ! -f $RELEASE_INFO_PATH ] ; then
    RELEASE_INFO_PATH=$OLD_RELEASE_INFO_PATH
fi

if [ -f $RELEASE_INFO_PATH ] ; then
   export VER=$(grep &quot;PLATFORM_RELEASE=&quot; $RELEASE_INFO_PATH | cut -d = -f 2 | tr -d &apos;&quot;&apos;)
fi

mkdir -p $MY_WORKSPACE
cd $MY_WORKSPACE
mkdir -p $INFO_DIR

echo &quot;###&quot; &gt; $INFO_FILE
echo &quot;### StarlingX&quot; &gt;&gt; $INFO_FILE

LAYER_PREFIX=${LAYER^^}
if [ &quot;$LAYER&quot; == &quot;&quot; ] || [ &quot;$LAYER&quot; == &quot;all&quot; ]; then
    LAYER_PREFIX=&quot;&quot;
fi

if [ &quot;$LAYER&quot; == &quot;&quot; ] || [ &quot;$LAYER&quot; == &quot;all&quot; ] || [ &quot;$LAYER&quot; == &quot;flock&quot; ] ; then
    if [ &quot;$BRANCH&quot; == &quot;master&quot; ]; then
       echo &quot;###     Built from master&quot; &gt;&gt; $INFO_FILE
    else
       echo &quot;###     Release $VER&quot; &gt;&gt; $INFO_FILE
    fi
else
    echo &quot;###     Layer $LAYER built from branch $BRANCH&quot; &gt;&gt; $INFO_FILE
fi

echo &quot;###&quot; &gt;&gt; $INFO_FILE
echo &quot;&quot; &gt;&gt; $INFO_FILE

if [ &quot;$LAYER&quot; == &quot;&quot; ] || [ &quot;$LAYER&quot; == &quot;all&quot; ] || [ &quot;$LAYER&quot; == &quot;flock&quot; ] ; then
    echo &quot;OS=\&quot;$OS\&quot;&quot; &gt;&gt; $INFO_FILE
    echo &quot;SW_VERSION=\&quot;$VER\&quot;&quot; &gt;&gt; $INFO_FILE
    echo &quot;BUILD_TARGET=\&quot;Host Installer\&quot;&quot; &gt;&gt; $INFO_FILE
    echo &quot;BUILD_TYPE=\&quot;Formal\&quot;&quot; &gt;&gt; $INFO_FILE
    if [ &quot;$BRANCH&quot; == &quot;master&quot; ]; then
       echo &quot;BUILD_ID=\&quot;$TIMESTAMP\&quot;&quot; &gt;&gt; $INFO_FILE
    else
       echo &quot;BUILD_ID=\&quot;$BRANCH\&quot;&quot; &gt;&gt; $INFO_FILE
    fi
    echo &quot;&quot; &gt;&gt; $INFO_FILE
    echo &quot;JOB=\&quot;$MASTER_JOB_NAME\&quot;&quot; &gt;&gt; $INFO_FILE
    echo &quot;BUILD_BY=\&quot;starlingx.build@cengn.ca\&quot;&quot;  &gt;&gt; $INFO_FILE
    echo &quot;BUILD_NUMBER=\&quot;$MASTER_BUILD_NUMBER\&quot;&quot; &gt;&gt; $INFO_FILE
    echo &quot;BUILD_HOST=\&quot;$HOSTNAME\&quot;&quot; &gt;&gt; $INFO_FILE
    date -u -d &quot;$(echo $TIMESTAMP | sed &apos;s/\([0-9][0-9][0-9][0-9]\)\([0-9][0-9]\)\([0-9][0-9]\)T\([0-9][0-9]\)\([0-9][0-9]\)\([0-9][0-9]\)Z/\1-\2-\3 \4:\5:\6 Z/&apos;)&quot; &quot;+BUILD_DATE=\&quot;%F %T %z\&quot;&quot; &gt;&gt; $INFO_FILE
fi

if [ &quot;$LAYER_PREFIX&quot;  != &quot;&quot; ]; then
    echo &quot;&quot; &gt;&gt; $INFO_FILE
    echo &quot;${LAYER_PREFIX}_OS=\&quot;$OS\&quot;&quot; &gt;&gt; $INFO_FILE
    echo &quot;${LAYER_PREFIX}_JOB=\&quot;$MASTER_JOB_NAME\&quot;&quot; &gt;&gt; $INFO_FILE
    echo &quot;${LAYER_PREFIX}_BUILD_BY=\&quot;starlingx.build@cengn.ca\&quot;&quot;  &gt;&gt; $INFO_FILE
    echo &quot;${LAYER_PREFIX}_BUILD_NUMBER=\&quot;$MASTER_BUILD_NUMBER\&quot;&quot; &gt;&gt; $INFO_FILE
    echo &quot;${LAYER_PREFIX}_BUILD_HOST=\&quot;$HOSTNAME\&quot;&quot; &gt;&gt; $INFO_FILE
    date -u -d &quot;$(echo $TIMESTAMP | sed &apos;s/\([0-9][0-9][0-9][0-9]\)\([0-9][0-9]\)\([0-9][0-9]\)T\([0-9][0-9]\)\([0-9][0-9]\)\([0-9][0-9]\)Z/\1-\2-\3 \4:\5:\6 Z/&apos;)&quot; &quot;+${LAYER_PREFIX}_BUILD_DATE=\&quot;%F %T %z\&quot;&quot; &gt;&gt; $INFO_FILE

    if [ &quot;$LAYER&quot; == &quot;flock&quot; ]; then
        DISTRO_REPO=$MY_REPO/centos-repo
        if [ ! -d $DISTRO_REPO ]; then
            DISTRO_REPO=$MY_REPO/cgcs-centos-repo
            if [ ! -d $DISTRO_REPO ]; then
                DISTRO_REPO=$MY_REPO/centos-repo
            fi
        fi
        for f in $(find $DISTRO_REPO/layer_build_info/ -type f -name &apos;*_BUILD_INFO&apos; | sort -r); do
            echo &quot;&quot; &gt;&gt; $INFO_FILE
            cat $f &gt;&gt; $INFO_FILE
        done
    fi
fi

</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@1.23">
      <recipients>scott.little@windriver.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.66">
      <recipientList>$DEFAULT_RECIPIENTS</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <from></from>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>BUILD_NM=$JOB_NAME
BUILD_NUM=$BUILD_NUMBER
PUBLISH_LOGS_BASE=$PUBLISH_LOGS_BASE</properties>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>copy_logs</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.9"/>
  </buildWrappers>
</project>
