<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>download mirror</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>60</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>DOCKER_BUILD_ID</name>
          <description></description>
          <defaultValue>downloader</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MY_REPO_ROOT</name>
          <description>/localdisk/designer/$USER/$PROJECT</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PUBLISH_LOGS_BASE</name>
          <description></description>
          <defaultValue>/tmp/logs</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PUBLISH_LOGS_URL</name>
          <description></description>
          <defaultValue>https://127.0.0.1/</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MY_REPO</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MY_WORKSPACE</name>
          <description>/localdisk/loadbuild/$USER/$PROJECT/$TIMESTAMP</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>LAYER</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>echo &quot;DOCKER_BUILD_ID=$DOCKER_BUILD_ID&quot;
echo &quot;MY_REPO_ROOT=$MY_REPO_ROOT&quot;
echo &quot;MY_REPO=$MY_REPO&quot;
echo &quot;MY_WORKSPACE=$MY_WORKSPACE&quot;
echo &quot;LAYER=$LAYER&quot;
echo &quot;PUBLISH_LOGS_BASE=$PUBLISH_LOGS_BASE&quot;
echo &quot;PUBLISH_LOGS_URL=$PUBLISH_LOGS_URL&quot;

[ -n &quot;$DOCKER_BUILD_ID&quot; ]
[ -n &quot;$MY_REPO_ROOT&quot; ]
[ -n &quot;$MY_REPO&quot; ]
[ -n &quot;$MY_WORKSPACE&quot; ]
[ -n &quot;$LAYER&quot; ]
[ -n &quot;$PUBLISH_LOGS_BASE&quot; ]
[ -n &quot;$PUBLISH_LOGS_URL&quot; ]

[ -d &quot;$MY_REPO_ROOT&quot; ]

if [ ! -f &quot;${MY_WORKSPACE}/NEED_BUILD&quot; ]; then
    echo &quot;No new content.  Build not required&quot;
    exit 0
fi

export MIRROR_TOOLS_DIR=$MY_REPO_ROOT/stx-tools/centos-mirror-tools
export DOCKER_BUILD_WORKDIR=$MY_REPO_ROOT/stx-tools
export STX_INSTALLER_DIR=&quot;$DOCKER_BUILD_WORKDIR/centos-mirror-tools/output/stx-installer&quot;

docker exec -i $DOCKER_BUILD_ID /bin/bash -c &quot;cd $MIRROR_TOOLS_DIR; mkdir -p output logs ; chown -R $(id -u) output logs&quot;
docker exec -i $DOCKER_BUILD_ID /bin/bash -c &quot;export MY_REPO=$MY_REPO; cd $MIRROR_TOOLS_DIR; bash -x -e ./download_mirror.sh -l $LAYER&quot;
docker exec -i $DOCKER_BUILD_ID /bin/bash -c &quot;cd $MIRROR_TOOLS_DIR; chown -R $(id -u) output logs&quot;

# Test for missing files, assert ERRORS==0
ERRORS=$(
   (
   cat $MIRROR_TOOLS_DIR/logs/*missing*.log
   grep -v &apos;already_there_srpm:&apos;  $MIRROR_TOOLS_DIR/logs/*failmoved*.log
   ) | wc -l )
[ $ERRORS -eq 0 ]

cd $DOCKER_BUILD_WORKDIR
FROM_DIR=centos-mirror-tools/output/stx-r1/CentOS/pike/Binary
if [ ! -d $FROM_DIR ]; then
    FROM_DIR=centos-mirror-tools/output/stx-r1/CentOS/Binary
fi
if [ ! -d $FROM_DIR ]; then
    FROM_DIR=centos-mirror-tools/output/stx/CentOS/Binary
fi
if [ -d $FROM_DIR/images ]; then
    if [ ! -d $STX_INSTALLER_DIR ]; then
         mkdir -p $STX_INSTALLER_DIR
         cp $FROM_DIR/images/pxeboot/initrd.img $STX_INSTALLER_DIR/initrd.img
         cp $FROM_DIR/images/pxeboot/vmlinuz $STX_INSTALLER_DIR/vmlinuz
         cp $FROM_DIR/LiveOS/squashfs.img $STX_INSTALLER_DIR/squashfs.img
    fi
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@1.23">
      <recipients>scott.little@windriver.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.66">
      <recipientList>$DEFAULT_RECIPIENTS</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <from></from>
      <saveOutput>false</saveOutput>
      <disabled>true</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>BUILD_NM=$JOB_NAME
BUILD_NUM=$BUILD_NUMBER
PUBLISH_LOGS_BASE=$PUBLISH_LOGS_BASE</properties>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>copy_logs</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.9"/>
  </buildWrappers>
</project>