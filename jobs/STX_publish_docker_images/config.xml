<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Publish build products associated with STX docker images</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.31">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>OS</name>
          <description></description>
          <defaultValue>centos</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_STREAM</name>
          <description>dev or stable</description>
          <defaultValue>dev</defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PUBLISH_OUTPUTS_BASE</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MY_REPO_ROOT</name>
          <description>/localdisk/designer/$USER/$PROJECT</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MY_WORKSPACE</name>
          <description>/localdisk/loadbuild/$USER/$PROJECT/$TIMESTAMP</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PUBLISH_LOGS_BASE</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PUBLISH_LOGS_URL</name>
          <description>https://127.0.0.1/</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PUBLISH_DISTRO_BASE</name>
          <description></description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TIMESTAMP</name>
          <description>19000101T010101Z</description>
          <defaultValue></defaultValue>
          <trim>false</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>echo &quot;MY_REPO_ROOT=$MY_REPO_ROOT&quot;
echo &quot;MY_WORKSPACE=$MY_WORKSPACE&quot;
echo &quot;OS=$OS&quot;
echo &quot;PUBLISH_OUTPUTS_BASE=$PUBLISH_OUTPUTS_BASE&quot;
echo &quot;BUILD_STREAM=$BUILD_STREAM&quot;
echo &quot;PUBLISH_LOGS_BASE=$PUBLISH_LOGS_BASE&quot;
echo &quot;PUBLISH_LOGS_URL=$PUBLISH_LOGS_URL&quot;
echo &quot;PUBLISH_DISTRO_BASE=$PUBLISH_DISTRO_BASE&quot;
echo &quot;TIMESTAMP=$TIMESTAMP&quot;

[ -n &quot;$MY_REPO_ROOT&quot; ]
[ -n &quot;$MY_WORKSPACE&quot; ]
[ -n &quot;$OS&quot; ]
[ -n &quot;$PUBLISH_OUTPUTS_BASE&quot; ]
[ -n &quot;$BUILD_STREAM&quot; ]
[ -n &quot;$PUBLISH_LOGS_BASE&quot; ]
[ -n &quot;$PUBLISH_LOGS_URL&quot; ]
[ -n &quot;$PUBLISH_DISTRO_BASE&quot; ]
[ -n &quot;$TIMESTAMP&quot; ]

if [ ! -f &quot;${MY_WORKSPACE}/NEED_BUILD&quot; ]; then
    echo &quot;No new content.  Build not required&quot;
    exit 0
fi

export DISTRO=&quot;$OS&quot;

PUBLISH_WHEELS_BASE=$PUBLISH_OUTPUTS_BASE/wheels
PUBLISH_IMAGES_BASE=$PUBLISH_OUTPUTS_BASE/docker-images
PUBLISH_IMAGE_LOGS_BASE=$PUBLISH_LOGS_BASE/docker-images

SRC_WHEELS_DIR=$MY_WORKSPACE/std/build-wheels-${OS}-${BUILD_STREAM}
SRC_IMAGES_DIR=$MY_WORKSPACE/std/build-images

mkdir -p $PUBLISH_DISTRO_BASE
mkdir -p $PUBLISH_WHEELS_BASE
mkdir -p $PUBLISH_IMAGES_BASE
mkdir -p $PUBLISH_IMAGE_LOGS_BASE

cp -L -v ${SRC_WHEELS_DIR}/stx-${OS}-${BUILD_STREAM}-wheels.tar ${PUBLISH_WHEELS_BASE}/
cp -v ${SRC_IMAGES_DIR}/*${OS}-${BUILD_STREAM}.rpmlst ${PUBLISH_IMAGES_BASE}/
cp -v ${SRC_IMAGES_DIR}/*${OS}-${BUILD_STREAM}.piplst ${PUBLISH_IMAGES_BASE}/
cp -v ${SRC_IMAGES_DIR}/*${OS}-${BUILD_STREAM}.log ${PUBLISH_IMAGE_LOGS_BASE}/

VER_LIST=&quot;${SRC_IMAGES_DIR}/images-${OS}-${BUILD_STREAM}-versioned.lst&quot;
LATEST_LIST=&quot;${SRC_IMAGES_DIR}/images-${OS}-${BUILD_STREAM}-latest.lst&quot;

if [ -f &quot;${VER_LIST}&quot; ]; then
    cp -v &quot;${VER_LIST}&quot; ${PUBLISH_IMAGES_BASE}/
    cp -v &quot;${VER_LIST}&quot; ${PUBLISH_DISTRO_BASE}/
fi

if [ -f &quot;${LATEST_LIST}&quot; ]; then
    cp -v &quot;${LATEST_LIST}&quot; ${PUBLISH_DISTRO_BASE}/
fi

if [ &quot;${OS}&quot; == &quot;centos&quot; ]; then
    DISTROLESS_OS=&quot;distroless&quot;
    for f in $(find ${SRC_IMAGES_DIR}/ -name &quot;*${DISTROLESS_OS}-${BUILD_STREAM}.rpmlst&quot;); do
        cp -v $f ${PUBLISH_IMAGES_BASE}/
    done
    for f in $(find ${SRC_IMAGES_DIR}/ -name &quot;*${DISTROLESS_OS}-${BUILD_STREAM}.piplst&quot;); do
        cp -v $f ${PUBLISH_IMAGES_BASE}/
    done
    for f in $(find ${SRC_IMAGES_DIR}/ -name &quot;*${DISTROLESS_OS}-${BUILD_STREAM}.log&quot;); do
        cp -v $f ${PUBLISH_IMAGE_LOGS_BASE}/
    done
    
    
    VER_LIST=&quot;${SRC_IMAGES_DIR}/images-${DISTROLESS_OS}-${BUILD_STREAM}-versioned.lst&quot;
    LATEST_LIST=&quot;${SRC_IMAGES_DIR}/images-${DISTROLESS_OS}-${BUILD_STREAM}-latest.lst&quot;

    if [ -f &quot;${VER_LIST}&quot; ]; then
        cp -v &quot;${VER_LIST}&quot; ${PUBLISH_IMAGES_BASE}/
        cp -v &quot;${VER_LIST}&quot; ${PUBLISH_DISTRO_BASE}/
    fi

    if [ -f &quot;${LATEST_LIST}&quot; ]; then
        cp -v &quot;${LATEST_LIST}&quot; ${PUBLISH_DISTRO_BASE}/
    fi
fi

if [ -L $PUBLISH_DISTRO_BASE/latest_docker_image_build ]; then
    \rm -f $PUBLISH_DISTRO_BASE/latest_docker_image_build 
fi
ln -s $TIMESTAMP $PUBLISH_DISTRO_BASE/latest_docker_image_build

</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.Mailer plugin="mailer@1.23">
      <recipients>scott.little@windriver.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.66">
      <recipientList>$DEFAULT_RECIPIENTS</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript>$DEFAULT_POSTSEND_SCRIPT</postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_REPLYTO</replyTo>
      <from></from>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>BUILD_NM=$JOB_NAME
BUILD_NUM=$BUILD_NUMBER
PUBLISH_LOGS_BASE=$PUBLISH_LOGS_BASE</properties>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>copy_logs</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.9"/>
  </buildWrappers>
</project>
